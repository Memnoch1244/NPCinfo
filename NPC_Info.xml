<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, December 22, 2023, 10:25 PM -->
<!-- MuClient version 5.07-pre -->

<!-- Plugin "NPC_Info" generated by Plugin Wizard -->

<muclient>
<plugin
   name="NPC_Info"
   author="Ramael"
   id="b4d0dab117586c793985623f"
   language="Lua"
   purpose="Shows NPCs in the same room as you."
   save_state="y"
   date_written="2023-12-22 22:24:13"
   requires="5.07"
   version="1.0"
   >

</plugin>


<!--  Script  -->

<script>
<![CDATA[

require "themed_miniwindows"
require "tprint"


my_window = ThemedTextWindow(
   GetPluginID(),  -- string, required, a unique identifier for this window
   0,  -- integer, required, where to put it if the player hasn't moved it
   0,  -- integer, required, where to put it if the player hasn't moved it
   400,  -- integer, required, how big to make it if the player hasn't moved it
   100,  -- integer, required, how big to make it if the player hasn't moved it
   "Refresh",  -- string, optional (nil means no titlebar), text to put into the title
   "center",  -- string, optional (default is "center"), "left", "center", or "right"
   false,  -- boolean, optional (default is false), true adds a close button in the top left
   true,  -- boolean, optional (default is false), make the window resizeable
   true,  -- boolean, optional (default is false), add a scrollbar and mousewheel scrolling
   true,  -- boolean, optional (default is false), make the text selectable
   true,  -- boolean, optional (default is false), make the text copyable via right-click
   false,  -- boolean, optional (default is false), turn detected URLs into clickable links
   false,  -- boolean, optional (default is false), automatically wrap text lines that are too wide
   nil,  -- string, optional (default is Dina), override the title font name
   nil,  -- integer, optional (default is 10), override the title font size
   nil,  -- string, optional (default is Dina), override the body text font name
   8,  -- integer, optional (default is 10), override the body text font size
   nil,  -- integer, optional (default is 1000), maximum number of text lines to keep
   nil,  -- integer, optional (default is 5 pixels), space between text and miniwindow frame
   nil,  -- boolean, optional (default is false), true will prevent the window from appearing until you call :show() on it
   false  -- boolean, optional (default is false), if true, pixels the same color as Theme.PRIMARY_BODY will be transparent
)


]]>

function SetTitle(name, line, wildcards, styles)
  my_window:dress_window(GetTriggerWildcard("capture_room_title", "room"))
  Note(GetTriggerWildcard("capture_room_title", "room"))
end

function chars_start()
  mob_count_here = 0
  mob_list = {}
  EnableTrigger("room_chars_trigger", true)
--  Note("Chars_Start")
end

function room_chars(name, line, wildcards, styles)
  mob_count_here = mob_count_here + 1
  mob_list [#mob_list + 1] = wildcards.char_name
--  Note("Room_Chars Added")
end

function chars_end(name, line, wildcards, styles)
--  tprint(mob_list)
  my_window:clear()
  for i = 1, #mob_list do
  my_window:add_text(mob_list[i], draw_after)
  end
  EnableTrigger("room_chars_trigger", false)
  EnableTriggerGroup("refresh_mobs", false)
end




function trigger_damage_done(name, line, wildcards)
  last_mob_damaged = Trim(wildcards.mob_name)
end

function trigger_receive_xp()
  EnableTrigger("squelch_tags", true)
  EnableTriggerGroup("kill_look", true)
  EnableTriggerGroup("look_room", false)
  pcall("set_tags")
  SendNoEcho("look")
end

function set_tags()
  SendNoEcho("tags roomdescs on")
--  SendNoEcho("tags exits on")
  SendNoEcho("tags roomobjs on")
  SendNoEcho("tags roomchars on")
end

function kill_start()
  mob_count_here = 0
  mob_list = {}
  EnableTrigger("kill_chars_trigger", true)
end

function kill_chars(name, line, wildcards, styles)
  mob_count_here = mob_count_here + 1
  mob_list [#mob_list + 1] = wildcards.char_name
--  Note("Kill_Chars Added")
end

function kill_end(name, line, wildcards, styles)
--  tprint(mob_list)
  my_window:clear()
  for i = 1, #mob_list do
  my_window:add_text(mob_list[i], draw_after)
  end
  EnableTrigger("kill_chars_trigger", false)
  EnableTriggerGroup("look_room", true)
  EnableTriggerGroup("kill_look", false)
end

function squelch_info(name, line, wildcards, styles)
  EnableTrigger("squelch_look", true)
end

function stop_squelch(name, line, wildcards, styles)
  EnableTrigger("squelch_look", false)
end




function save_tag_state(name, line, wildcards)
  tag_list [#tag_list + 1] = Trim(wildcards.tag_status)
--  Note(wildcards.tag_status)
end

function tags_start(name, line, wildcards)
  EnableTrigger("tags_omit", true)
end

function tags_end(name, line, wildcards)
  EnableTriggerGroup("tags_save", false)
  EnableTrigger("tags_omit", false)
--  tprint(tag_list)
  Note("NPC Info loading complete.")
end

function OnPluginEnable()
  Note("Getting TAGS status...")
  tag_list = {}
  SendNoEcho("tags roomchars on")
  SendNoEcho("tags roomnames on")
  EnableTriggerGroup("tags_save", true)
  SendNoEcho("tags")
end

function OnPluginInstall()
  Note("Getting TAGS status...")
  tag_list = {}
  SendNoEcho("tags roomchars on")
  SendNoEcho("tags roomnames on")
  EnableTriggerGroup("tags_save", true)
  SendNoEcho("tags")
end

</script>




<triggers>


<!-- Look and Move Group look_room -->

<trigger
  name="capture_room_title"
  enabled="y"
  group="look_room"
  keep_evaluating="y"
  match="^\{rname\}(?P<room>.*)"
  regexp="y"
  omit_from_output="y"
  send_to="12"
  script="SetTitle"
  sequence="50"
  >
</trigger>

<trigger 
  match="{roomobjs}"
  group="look_room"
  enabled="y" 
  regexp="n" 
  sequence="100" 
  omit_from_output="y" 
  > 
</trigger>

<trigger 
  match="{/roomobjs}"
  group="look_room"
  enabled="y" 
  regexp="n" 
  sequence="100" 
  omit_from_output="y" 
  > 
</trigger>

<trigger 
  match="{roomchars}"
  script="chars_start"
  group="look_room"
  enabled="y" 
  regexp="n" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>

<trigger match="*{/roomchars}*"
  script="chars_end"
  group="look_room"
  enabled="y" 
  regexp="n" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>

<trigger 
  match="^(?P<char_name>.+)$"
  script="room_chars" 
  name="room_chars_trigger"
  enabled="n" 
  regexp="y" 
  sequence="50" 
  omit_from_output="n" 
  send_to="12" 
  > 
</trigger>


<!-- On Kill Group kill_look -->

<trigger
  name="kill_room_title"
  enabled="n"
  group="kill_look"
  keep_evaluating="y"
  match="{rname}*"
  regexp="n"
  omit_from_output="y"
  send_to="12"
  script="squelch_info"
  sequence="50"
  >
</trigger>

<trigger
  name="stop_squelch"
  enabled="n"
  group="kill_look"
  keep_evaluating="y"
  match="*{/roomobjs}*"
  regexp="n"
  omit_from_output="y"
  send_to="12"
  script="stop_squelch"
  sequence="50"
  >
</trigger>

<trigger 
  match="^(Tag option roomdescs turned ON|Tag option exits turned ON|Tag option roomobjs turned ON)$"
  name="squelch_tags"
  enabled="n" 
  regexp="y" 
  sequence="100" 
  omit_from_output="y" 
  > 
</trigger>

<trigger 
  match="*"
  name="squelch_look"
  enabled="n" 
  regexp="n" 
  sequence="100" 
  omit_from_output="y" 
  > 
</trigger>

<trigger 
  match="{roomchars}"
  script="kill_start"
  group="kill_look"
  enabled="n" 
  regexp="n" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>

<trigger match="*{/roomchars}*"
  script="kill_end"
  group="kill_look"
  enabled="n" 
  regexp="n" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>

<trigger 
  match="^(?P<char_name>.+)$"
  script="kill_chars" 
  name="kill_chars_trigger"
  enabled="n" 
  regexp="y" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>



<!-- Tag Logging in Development -->

<trigger 
  match="*"
  group="tags_save"
  enabled="n" 
  regexp="n" 
  sequence="100" 
  omit_from_output="y" 
  > 
</trigger>

<trigger match="NOTE: GMCP session tags option is *"
  script="tags_end"
  enabled="n" 
  group="tags_save"
  regexp="n" 
  sequence="50" 
  omit_from_output="y" 
  send_to="12" 
  > 
</trigger>

<trigger 
  match="^EXITS         Display tags around autoexits: {exits}                  (?P<tag_status>.*)$"
  script="save_tag_state" 
  group="tags_save"
  enabled="n" 
  regexp="y" 
  sequence="75" 
  omit_from_output="y" 
  send_to="12" 
  >
</trigger>

<trigger 
  match="^ROOMDESCS     Display tags around descs {rdesc}                       (?P<tag_status>.*)$"
  script="save_tag_state" 
  enabled="n" 
  regexp="y"
  group="tags_save" 
  sequence="75" 
  omit_from_output="y" 
  send_to="12" 
  >
</trigger>

<trigger 
  match="^ROOMCHARS     Display tags around characters in a room.               (?P<tag_status>.*)$"
  script="save_tag_state" 
  group="tags_save"
  enabled="n" 
  regexp="y" 
  sequence="75" 
  omit_from_output="y" 
  send_to="12" 
  >
</trigger>


	<trigger match="^You (?:don't )?receive \d+(?:\+\d+)* experience points?\."
		script="trigger_receive_xp" ignore_case="y" enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

<!-- Damage triggers -->
	<trigger match="^.+\w tickles +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w bruises +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w scratches +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w grazes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w nicks +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w scars +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w hits +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w injures +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w wounds +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w mauls +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w maims +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w mangles +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w mars +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w LACERATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w DECIMATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w DEVASTATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w ERADICATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w OBLITERATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w EXTIRPATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w INCINERATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w MUTILATES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w DISEMBOWELS +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w MASSACRES +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w DISMEMBERS +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w RENDS +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w - BLASTS - +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w -= DEMOLISHES =- +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w \*\* SHREDS \*\* +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w \*\*\*\* DESTROYS \*\*\*\* +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w \*\*\*\*\* PULVERIZES \*\*\*\*\* +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w -=- VAPORIZES -=- +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-==-> ATOMIZES <-==-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-:-> ASPHYXIATES <-:-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-\*-> RAVAGES <-\*-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <>\*<> FISSURES <>\*<> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <\*><\*> LIQUIDATES <\*><\*> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <\*><\*><\*> EVAPORATES <\*><\*><\*> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-=-> SUNDERS <-=-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <=-=><=-=> TEARS INTO <=-=><=-=> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <->\*<=> WASTES <=>\*<-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-\+-><-\*-> CREMATES <-\*-><-\+-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <\*><\*><\*><\*> ANNIHILATES <\*><\*><\*><\*> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <--\*--><--\*--> IMPLODES <--\*--><--\*--> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-><-=-><-> EXTERMINATES <-><-=-><-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-==-><-==-> SHATTERS <-==-><-==-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <\*><-:-><\*> SLAUGHTERS <\*><-:-><\*> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-\*-><-><-\*-> RUPTURES <-\*-><-><-\*-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-\*-><\*><-\*-> NUKES <-\*-><\*><-\*-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w -<\[=-\+-=\]<:::<>:::> GLACIATES <:::<>:::>\[=-\+-=\]>- +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-=-><-:-\*-:-><\*--\*> METEORITES <\*--\*><-:-\*-:-><-=-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w <-:-><-:-\*-:-><-\*-> SUPERNOVAS <-\*-><-:-\*-:-><-:-> +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w does UN\w+ things to +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w damages? +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +shreds +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +destroys +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +pulverizes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +vaporizes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +atomizes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +asphyxiates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +ravages +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +fissures +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +liquidates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +evaporates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +sunders +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +into +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +wastes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +cremates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +annihilates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +implodes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +exterminates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +shatters +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +slaughters +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +ruptures +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +nukes +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +glaciates +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +meteorites +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^.+\w +supernovas +(?<mob_name>\S.*)[!\.] \[\d+\]$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>

	<trigger match="^(?:You assassinate |You catch |You attempt to bury .* deep into |You lunge at)(?<mob_name>.*)(?: with cold efficiency\.| completely off-guard and inflict massive damage on .*\.|'s? back!|with a .*!)$"
		script="trigger_damage_done" ignore_case="y"  enabled="y" regexp="y" sequence="1" keep_evaluating="y" omit_from_output="n" > </trigger>



</triggers>

</muclient>
